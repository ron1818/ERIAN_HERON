<?xml version="1.0"?>
<!-- modified by ren ye on 2016-06-24 for heron -->

<robot name="heron"
    xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
    xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
    xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
    xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Included URDF Files -->
    <xacro:include filename="$(find heron_description)/urdf/base.urdf.xacro" />	

    <!-- Set up imu configuration -->
    <gazebo>
        <plugin name="heron_imu" filename="libgazebo_ros_imu.so">
            <updateRate>20.0</updateRate>
            <bodyName>base_link</bodyName>
            <topicName>imu/data</topicName>
            <rpyOffsets>0 0 0</rpyOffsets> <!-- deprecated -->
            <gaussianNoise>0</gaussianNoise> <!-- deprecated -->
            <accelDrift>0.5 0.5 0.5</accelDrift>
            <accelGaussianNoise>0.35 0.35 0.3</accelGaussianNoise>
            <rateDrift>0.1 0.1 0.1</rateDrift>
            <rateGaussianNoise>0.05 0.05 0.015</rateGaussianNoise>
            <headingDrift>0.1</headingDrift>
            <headingGaussianNoise>0.05</headingGaussianNoise>
        </plugin>
    </gazebo>

    <!-- Set up gps configuration -->
    <gazebo>
        <plugin name="heron_gps" filename="libhector_gazebo_ros_gps.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>10.0</updateRate>
            <bodyName>base_link</bodyName>
            <topicName>navsat/fix</topicName>
            <velocityTopicName>navsat/vel</velocityTopicName>
            <drift>5.0 5.0 5.0</drift>
            <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
            <velocityDrift>0 0 0</velocityDrift>
            <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
        </plugin>
    </gazebo>



    <!-- Set up kinect configuration -->
    <gazebo reference="kinect_camera_depth_frame">
        <sensor type="depth" name="kinect_camera">
            <update_rate>20</update_rate>
            <camera>
                <horizontal_fov>${60 * M_PI/180.0}</horizontal_fov>
                <image>
                    <format>R8G8B8</format>
                    <width>640</width>
                    <height>480</height>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>3</far>
                </clip>
            </camera>
            <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
                <cameraName>heron/kinect_camera</cameraName>
                <imageTopicName>rgb/image_raw</imageTopicName>
                <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
                <depthImageTopicName>depth/image_raw</depthImageTopicName>
                <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
                <pointCloudTopicName>depth/points</pointCloudTopicName>
                <pointCloudCutoff>0.05</pointCloudCutoff>
                <pointCloudCutoffMax>5</pointCloudCutoffMax>
                <frameName>kinect_camera_depth_optical_frame</frameName>
            </plugin>
        </sensor>
    </gazebo>


    <!-- Set up camera configuration -->
    <gazebo reference="camera_link">
        <sensor type="camera" name="camera">
            <update_rate>30.0</update_rate>
            <camera name="heron_camera">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.  
                       That pixel's noise value is added to each of its color
                       channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>30.0</updateRate>
                <cameraName>heron/camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>


    <!-- Set up sonar configuration -->
    <xacro:if value="$(arg sonar_enabled)"> 
        <gazebo reference="sonar_link">
            <sensor type="ray" name="sonar_sensor">
                <pose>0 0 0 0 0 0</pose>
                <visualize>true</visualize>
                <update_rate>20</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>3</samples>
                            <resolution>1</resolution>
                            <min_angle>${-5*M_PI/180}</min_angle>
                            <max_angle>${5*M_PI/180}</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.10</min>
                        <max>30.0</max>
                        <resolution>0.01</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <!-- Noise parameters based on published spec for Hokuyo laser
                             achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                             stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                             reading. -->
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </ray>

                <plugin name="heron_ros_sonar_controller" filename="libhector_gazebo_ros_sonar.so">
                    <gaussianNoise>0.005</gaussianNoise>
                    <bodyName>base_link</bodyName>
                    <topicName>heron/sonar</topicName>
                    <frameId>sonar_link</frameId>
                    <offset>0</offset>
                    <drift>0</drift>
                    <driftFrequency>0</driftFrequency>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:if>


    <!-- Set up hokuyo configuration -->
    <gazebo reference="hokuyo_link">
        <sensor type="ray" name="head_hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>20</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>${-M_PI/2}</min_angle>
                        <max_angle>${M_PI/2}</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.08</min>
                    <max>30</max>
                    <resolution>0.004</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
      </noise>
  </ray>

  <plugin name="gazebo_ros_hokuyo_utm30lx_model_controller" filename="libgazebo_ros_laser.so">
      <bodyName>base_link</bodyName>
      <topicName>heron/laser/scan</topicName>
      <frameName>hokuyo_link</frameName>
  </plugin>
    </sensor>
</gazebo>


<!-- ros_control plugin /-->
<gazebo>
    <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <odometryRate>20.0</odometryRate>
        <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
</gazebo>
</robot>

